"""""""""""""""""""""""""""""""""""""""""""""""
" Vimplug install/setup
"""""""""""""""""""""""""""""""""""""""""""""""
" Install vim-plug if not found
if empty(glob('~/.vim/autoload/plug.vim'))
  silent !curl -fLo ~/.vim/autoload/plug.vim --create-dirs
    \ https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
endif

call plug#begin('~/.vim/plugged')

" list of plugins
Plug 'joshdick/onedark.vim'
Plug 'junegunn/fzf', { 'do': { -> fzf#install() } }
Plug 'junegunn/fzf.vim'
Plug 'junegunn/seoul256.vim'
Plug 'leafgarland/typescript-vim'
Plug 'mattn/emmet-vim'
Plug 'maxmellon/vim-jsx-pretty'
Plug 'pangloss/vim-javascript'
Plug 'rafi/awesome-vim-colorschemes'
Plug 'tpope/vim-fugitive'
Plug 'tpope/vim-sensible'
Plug 'tpope/vim-surround'


" Run PlugInstall if there are missing plugins
if len(filter(values(g:plugs), '!isdirectory(v:val.dir)'))
  autocmd VimEnter * PlugInstall --sync | source $MYVIMRC
endif

" Enable plugins
call plug#end()

"""""""""""""""""""""""""""""""""""""""""""""""
" General
"""""""""""""""""""""""""""""""""""""""""""""""
" Enable filetype plugins
filetype plugin on
filetype indent on

" Auto read when file changed
set autoread

"""""""""""""""""""""""""""""""""""""""""""""""
" Font and Color
"""""""""""""""""""""""""""""""""""""""""""""""
syntax enable
set number

fun! MySys()
    return "linux"
endfun

" Set font according to system
if MySys() == "mac"
  set gfn=Menlo:h15
  set shell=/bin/zsh
elseif MySys() == "windows"
  set gfn=Bitstream\ Vera\ Sans\ Mono:h10
elseif MySys() == "linux"
  set gfn=Fira\ Code:style=Regular
  set shell=/bin/zsh
endif

" Color theme
if has("gui_running")
  set guioptions-=T
  set t_Co=256
  colorscheme seoul256
else
  set background=dark
  colorscheme seoul256
endif

" encoding
set encoding=utf-8

try
    lang en_US
catch
endtry

set ffs=unix,dos,mac "Default file types

au BufNewFile,BufRead *.vb set ft=vbnet


"""""""""""""""""""""""""""""""""""""""""""""""
" Indent and space
"""""""""""""""""""""""""""""""""""""""""""""""
set ai "Auto indent
set si "Smart indent
set nowrap "Wrapping

set shiftwidth=4
set tabstop=2
set expandtab
set smarttab

"""""""""""""""""""""""""""""""""""""""""""""""
" Searching related
"""""""""""""""""""""""""""""""""""""""""""""""
set ignorecase "Ignore case when searching
set smartcase

set hlsearch "Highlight search things

set incsearch "Make search act like search in modern browser

set showmatch "Show matching bracket
set mat=2 "How many teths of a sec to blink

"""""""""""""""""""""""""""""""""""""""""""""""
" KEY MAPPING
"""""""""""""""""""""""""""""""""""""""""""""""
let mapleader=','
nnoremap <silent> <leader>f :Files<CR>

" Mapping selecting mappings
nmap <leader><tab> <plug>(fzf-maps-n)
xmap <leader><tab> <plug>(fzf-maps-x)
omap <leader><tab> <plug>(fzf-maps-o)

" Insert mode completion
imap <c-x><c-k> <plug>(fzf-complete-word)
imap <c-x><c-f> <plug>(fzf-complete-path)
imap <c-x><c-l> <plug>(fzf-complete-line)

" Path completion with custom source command
inoremap <expr> <c-x><c-f> fzf#vim#complete#path('fd')
inoremap <expr> <c-x><c-f> fzf#vim#complete#path('rg --files')

" Word completion with custom spec with popup layout option
inoremap <expr> <c-x><c-k> fzf#vim#complete#word({'window': { 'width': 0.2, 'height': 0.9, 'xoffset': 1 }})
